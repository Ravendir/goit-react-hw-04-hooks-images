{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/ImageGallery/ImageGallery.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App/App.jsx","index.js"],"names":["SearchBar","onSubmit","useState","imgName","setImgName","className","e","preventDefault","type","onChange","imgToSearch","target","value","autoComplete","autoFocus","placeholder","propsTypes","PropTypes","func","ImageGallery","children","API_KEY","axios","defaults","baseURL","getImg","a","page","queryOptions","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","get","toString","data","ImageGalleryItem","image","onClick","src","webformatURL","alt","tags","largeImageURL","id","Button","onClickBtn","useEffect","require","Modal","onClose","largeImg","pressEsc","code","window","addEventListener","removeEventListener","currentTarget","loaderStyle","position","left","top","transform","App","setPage","imgsArray","setImgsArray","searchImg","setSearchImg","loader","setLoader","setLargeImg","altImage","setAltImage","getSearchImg","imgs","totalHits","toast","error","prevImgsArray","hits","length","success","message","onClickImage","dataset","large","color","height","width","style","timeout","map","img","nanoid","prevPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b6e5bf9.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchBar.scss';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [imgName, setImgName] = useState('');\n\n  const imgToSearch = imgName => {\n    setImgName(imgName);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(imgName);\n  };\n\n  return (\n    <header className=\"searchbar\">\n      <form className=\"SearchForm\" onSubmit={onFormSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          &#128269;\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          onChange={e => imgToSearch(e.target.value)}\n          value={imgName}\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchBar.propsTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default SearchBar;\n","import PropTypes from 'prop-types';\n\nimport './ImageGallery.scss';\n\nconst ImageGallery = ({ children }) => {\n  return <ul className=\"ImageGallery\">{children}</ul>;\n};\n\nImageGallery.propTypes = {\n  children: PropTypes.array,\n};\n\nexport default ImageGallery;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '24484342-5d490b786e593542a839fc86b';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst getImg = async (imgToSearch, page = 1) => {\n  const queryOptions = new URLSearchParams({\n    key: API_KEY,\n    q: imgToSearch,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: 12,\n    page,\n  });\n  try {\n    const { data } = await axios.get('?' + queryOptions.toString());\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default getImg;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.scss';\n\nconst ImageGalleryItem = ({ image, onClick }) => {\n  return (\n    <>\n      <li className=\"ImageGalleryItem\" key={image.id} onClick={onClick}>\n        <img\n          className=\"ImageGalleryItem-image\"\n          src={image.webformatURL}\n          alt={image.tags}\n          data-large={image.largeImageURL}\n        />\n      </li>\n    </>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.object,\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport './Button.scss';\n\nconst Button = ({ onClickBtn }) => {\n  return (\n    <div className=\"coverBtn\">\n      <button onClick={() => onClickBtn()} className=\"btn\" type=\"button\">\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClickBtn: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport './Modal.scss';\nconst { useEffect } = require('react');\n\nconst Modal = ({ onClose, largeImg, alt }) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const pressEsc = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const onBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', pressEsc);\n    return () => {\n      window.removeEventListener('keydown', pressEsc);\n    };\n  }, [pressEsc]);\n\n  return (\n    <div className=\"overlay\" onClick={onBackDropClick}>\n      <div className=\"modal\">\n        <img src={largeImg} alt={alt} />\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  largeImg: PropTypes.string,\n  alt: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default Modal;\n","import { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { nanoid } from \"nanoid\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport getImg from \"../../services/api\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport Button from \"../Button/Button\";\nimport Modal from \"../Modal/Modal\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nconst loaderStyle = {\n  position: \"fixed\",\n  left: \"50%\",\n  top: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n};\n\nconst App = () => {\n  const [page, setPage] = useState(1);\n  const [imgsArray, setImgsArray] = useState([]);\n  const [searchImg, setSearchImg] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const [largeImg, setLargeImg] = useState(\"\");\n  const [altImage, setAltImage] = useState(\"\");\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const getSearchImg = async () => {\n    setLoader(true);\n    try {\n      const imgs = await getImg(searchImg, page);\n\n      if (!imgs.totalHits) {\n        return toast.error(\"Please write valid value\");\n      }\n\n      setImgsArray((prevImgsArray) => [...prevImgsArray, ...imgs.hits]);\n\n      if (imgsArray.length && page === 1) {\n        toast.success(`We found ${imgs.totalHits} images`);\n      }\n\n      return imgs.hits;\n    } catch (error) {\n      setLoader(false);\n      toast.error(`${error.message}`);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  useEffect(() => {\n    getSearchImg();\n  }, [searchImg, page]);\n\n  const fetchNextPageImg = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  const onSearchSubmit = (searchImg) => {\n    setSearchImg(searchImg);\n    setImgsArray([]);\n    setPage(1);\n  };\n\n  const onCloseModal = () => {\n    setLargeImg(\"\");\n    setAltImage(\"\");\n  };\n\n  const onClickImage = (e) => {\n    if (e.currentTarget === e.target) return;\n    setLargeImg(e.target.dataset.large);\n    setAltImage(e.target.alt);\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={onSearchSubmit} />\n      <main>\n        {loader && (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            style={{ ...loaderStyle }}\n            timeout={1000}\n          />\n        )}\n\n        <ImageGallery>\n          {imgsArray.map((img) => (\n            <ImageGalleryItem\n              key={nanoid()}\n              image={img}\n              onClick={onClickImage}\n            />\n          ))}\n        </ImageGallery>\n\n        {imgsArray.length > 11 && <Button onClickBtn={fetchNextPageImg} />}\n\n        <ToastContainer />\n      </main>\n\n      {largeImg && (\n        <Modal onClose={onCloseModal} largeImg={largeImg} alt={altImage} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}